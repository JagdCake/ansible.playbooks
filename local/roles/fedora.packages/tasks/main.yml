---
- name: remove unnecessary default packages
  dnf:
    name: "{{ packages_to_remove }}"
    state: absent

- name: upgrade all installed packages
  dnf:
    name: "*"
    state: latest
    update_cache: yes

- import_tasks: ./minimal-kde.yml

- name: enable the free and nonfree RPM Fusion repositories
  dnf:
    name:
      - "https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_distribution_major_version }}.noarch.rpm"
      - "https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_distribution_major_version }}.noarch.rpm"
    state: present

- name: install system packages
  dnf:
    name: "{{ system }}"
    state: present

- name: install work packages
  dnf:
    name: "{{ tools }}"
    state: present
  notify: "install vim-plug"

- name: install media apps
  dnf:
    name: "{{ media }}"
    state: present

- name: install python packages
  pip:
    name: "{{ python }}"
    executable: pip3
    extra_args: --user
  become: no

- name: create directory for global NPM packages
  file:
    path: "{{ ansible_user_dir }}/.npm-global"
    state: directory
  become: no

- name: configure NPM to use the created directory to install global packages
  lineinfile:
    path: "{{ ansible_user_dir }}/.npmrc"
    create: yes
    line: prefix=~/.npm-global
    state: present
  become: no

- name: install Node.js packages
  npm:
    name: "{{ item }}"
    global: yes
  become: no
  with_items: "{{ nodejs }}"

- name: download stack (Haskell package tool)
  get_url:
    url: https://get.haskellstack.org/
    dest: /tmp
  become: no

- name: install stack
  command: sh /tmp/get-stack.sh
  args:
    creates: /usr/local/bin/stack

- name: update stack's package index
  command: stack update
  become: no

- name: install Haskell libraries
  command: stack install --resolver=lts "{{ item }}"
  with_items: "{{ haskell }}"
  become: no

- name: install Ruby gems
  gem:
    name: "{{ item }}"
    user_install: yes
  with_items: "{{ ruby }}"
  become: no

- name: install Rust crates
  command: cargo install "{{ item }}"
  with_items: "{{ rust }}"
  become: no
...
